mongo:
  username: sergio
  password: 123456
  host: localhost
  port: 27144
  db: library
  replica_name: rs0
  auth:
    db: admin
    mechanism: SCRAM-SHA-256
  ssl: false
spring:
  data:
    mongodb:
      uri: mongodb://${mongo.username}:${mongo.password}@${mongo.host}:${mongo.port}/${mongo.db}?ssl=${mongo.ssl}&authSource=${mongo.auth.db}&authMechanism=${mongo.auth.mechanism}&replicaSet=${mongo.replica_name}
      auto-index-creation: true

  profiles:
    active: prod, redis, security_init, mysql, users
  main:
    banner-mode: "off"

---

spring:
  config:
    activate:
      on-profile: prod

server:
  port: 8081

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.sergio.library: DEBUG
    org.hibernate: INFO
  pattern:
    console: " %black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file: ./logs/application-debug.log

---

spring:
  config:
    activate:
      on-profile: redis

  redis:
    host: localhost
    password: 12345
    port: 6393

  session:
    store-type: redis

  cache:
    type: redis
    redis:
      cache-null-values: false
      time-to-live: 600000
      use-key-prefix: true

---

spring:
  config:
    activate:
      on-profile: security_init

---
spring:
  config:
    activate:
      on-profile: mysql

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    open-in-view: false

  datasource:
    url: jdbc:mysql://localhost:6033/hw14_acl
    username: sergio
    password: 123456
    schema: classpath:./acl/schema.sql
    initialization-mode: always

---
spring:
  config:
    activate:
      on-profile: users
admin:
  username: admin
  password: password
  role: ADMIN
  full_role: ROLE_ADMIN

users:
    userMap:
      user1: 123456
      user2: password
    role: USER
any:
    role: ANY
